#cloud-config
#
# Set up a Shiny server on Ubuntu 20.04 - without SSL certificate
# Creates a new user with SSH access and password-less sudo capabilities
#
# Log is saved as /var/log/cloud-init-output.log
#
########## IMPORTANT CHECKS ##########
# Checks to do BEFORE you run this script:
# - Be sure to set the variables MY_USERNAME, MY_SSH_PORT, MY_SSH_PUBLIC_KEY and MY_SSL_UFW_NGINX in the first code section below.
# - If running on smaller droplet uncomment the section that enlarges swapfile
#
# Checks to do AFTER you run this script:
# - (SSH) Is SSH key added? sudo nano ~/.ssh/authorized_keys
# - (SSH) Has port changed from 22 to the port defined by the variable MY_SSH_PORT? sudo nano /etc/ssh/sshd_config
# - (Nginx) Is the content of the server block written to the file that is included in the Nginx config file /etc/nginx/conf.d? sudo nano /etc/nginx/sites-enabled/default
# - Are .deb files deleted? sudo ls -l /var/cache/apt/archives
#   - If not, apply sudo apt-get clean (source: https://www.jverdeyen.be/ubuntu/digital-ocean-ubuntu-free-up-disk-space/)
# - (sed) Check sed syntax at https://sed.js.org/index.html, this tool was used to solve the issue with changing the SSH port to MY_SSH_PORT (see commit w/ hash fcb426dd536952ce929329a865d737660d12f112)
#
########## REFERENCES ##########
#
# Help on choosing the right Ubuntu version from:
# - https://cloud.r-project.org/bin/linux/ubuntu/ for the choice of the Ubuntu version for R (short read)
# - https://cran.rstudio.com/bin/linux/ubuntu/fullREADME.html for the choice of the Ubuntu version for R (long read)
# - https://www.rstudio.com/products/shiny/download-server/ubuntu/ for the choice of the Ubuntu version for the Shiny server 
#
# Help on cloud-init syntax from:
#  - https://cloudinit.readthedocs.io/en/latest/topics/examples.html
#  - https://www.digitalocean.com/community/tutorials/how-to-use-cloud-config-for-your-initial-server-setup
#    (ERROR: THE ssh-authorized-keys (AND sudo) SYNTAX IS WRONG **IN ALL DIGITAL OCEAN EXAMPLES**, SEE NEXT REFERENCE)
#  - https://superuser.com/questions/1725127/invalid-config-for-cloud-init-but-apparently-still-works-how-do-i-remove-the
#  - https://github.com/andrewheiss/cloud-config-files
#  - https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
#
# Help on Shiny server installation syntax from:
#  - http://deanattali.com/2015/05/09/setup-rstudio-shiny-server-digital-ocean/
#  - https://www.digitalocean.com/community/tutorials/how-to-set-up-shiny-server-on-ubuntu-20-04
#  - https://gist.github.com/mdlincoln/1f40f4e88ce32c55b5f3
#  - https://gist.github.com/mdlincoln/1f40f4e88ce32c55b5f3#gistcomment-3009981
#  - https://cran.rstudio.com/bin/linux/ubuntu/fullREADME.html#using-apt-key

# Define your own version of the following variables
variables:
  MY_USERNAME: 'piet'
  MY_SSH_PORT: '4444'
  MY_SSH_PUBLIC_KEY: '... Main computer'   # Replace 
  MY_SSL_UFW_NGINX: 'HTTP'                 # Use this when opening port 80 alone (and not port 443)
  #MY_SSL_UFW_NGINX: 'Full'                # Use this instead when opening both port 80 and port 443

# Add apt mirror to get the latest version of R necessary for Shiny
apt:
  sources:
    source1:
      source: "deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/"
      keyid: E298A3A825C0D65DFD57CBB651716619E084DAB9

package_upgrade: true
packages:
  - fail2ban
  - curl
  # Packages for R
  - r-base-dev
  - libcurl4-gnutls-dev
  - libxml2-dev
  - libssl-dev
  # Packages for Shiny server
  - nginx
  - gdebi-core
users:
  - name: $(MY_USERNAME)
    # Add SSH key
    ssh_authorized_keys:
      - ssh-rsa $(MY_SSH_PUBLIC_KEY)
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: sudo
    shell: /bin/bash
write_files:
  - path: /etc/fail2ban/jail.local
    content: |
        [DEFAULT]
        # Ban hosts for one hour:
        bantime = 3600
        #
        # Override /etc/fail2ban/jail.d/00-firewalld.conf:
        banaction = iptables-multiport
        #
        [sshd]
        enabled = true
        port    = $(MY_SSH_PORT)
        logpath = %(sshd_log)s
  # Forward ports for Shiny
  - path: /etc/nginx/sites-enabled/default
    content: |
      # Mitigation Slow Read/Loris DDOS attack
      limit_conn_zone $binary_remote_addr zone=addr:10m;
      
      # Everything else...
      server {
        # Mitigation Slow Read/Loris DDOS attack
        client_body_timeout 5s;
        client_header_timeout 5s;
      
        # Everything else...
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name _;
        
        location / {
          # Mitigation Slow Read/Loris DDOS attack
          limit_conn addr 250;
          
          # Everything else...
          proxy_pass http://127.0.0.1:3838;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 20d;
        }
      }
runcmd:
  # Configure SSH and fail2ban
  - sed -i -e '/^[# ]*Port/s/^.*$/Port $(MY_SSH_PORT)/' /etc/ssh/sshd_config
  - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '$aAllowUsers $(MY_USERNAME)' /etc/ssh/sshd_config
  - sed -i -e '$aDebianBanner no' /etc/ssh/sshd_config
  - service ssh restart
  - service fail2ban restart
  # Prevent Nginx from showing its version number
  - sed -i -e '/^[# ]*server_tokens/s/^.*$/server_tokens off;/' /etc/nginx/nginx.conf
  - service nginx restart
  # Set up a basic firewall, but allow SSH connections
  - ufw allow OpenSSH
  - ufw allow 'Nginx $(MY_SSL_UFW_NGINX)'
  - ufw allow $(MY_SSH_PORT)/tcp
  - ufw --force enable
  # Get rid of message about how to run sudo
  - install -m 644 -o $(MY_USERNAME) /dev/null /home/$(MY_USERNAME)/.sudo_as_admin_successful
  # ### R stuff ###
  # Bigger swap file for R on smaller machines
  - /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
  - /sbin/mkswap /var/swap.1
  - /sbin/swapon /var/swap.1
  - sh -c 'echo "/var/swap.1 swap swap defaults 0 0 " >> /etc/fstab'
  # Install "shiny" package for R
  - R -e 'install.packages(c("shiny", "rmarkdown"), repos="https://cran.rstudio.com/")'
  # Download and install Shiny
  - wget https://download3.rstudio.org/ubuntu-18.04/x86_64/shiny-server-1.5.18.987-amd64.deb
  - gdebi -n shiny-server-1.5.18.987-amd64.deb
  # Clean package files
  - sudo apt-get clean
  - service nginx restart
